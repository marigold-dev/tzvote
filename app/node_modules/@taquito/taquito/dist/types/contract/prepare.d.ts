import { OriginateParams, RPCOriginationOperation, TransferParams, RPCTransferOperation, DelegateParams, RPCDelegateOperation, RegisterDelegateParams, RPCRevealOperation, RevealParams, RegisterGlobalConstantParams, RPCRegisterGlobalConstantOperation, TransferTicketParams, RPCTransferTicketOperation, IncreasePaidStorageParams, RPCIncreasePaidStorageOperation, DrainDelegateParams, RPCDrainDelegateOperation, BallotParams, RPCBallotOperation, ProposalsParams, RPCProposalsOperation, UpdateConsensusKeyParams, RPCUpdateConsensusKeyOperation, SmartRollupAddMessagesParams, RPCSmartRollupAddMessagesOperation, RPCSmartRollupOriginateOperation, SmartRollupOriginateParamsWithProof, ActivationParams, RPCActivateOperation } from '../operations/types';
export declare const createActivationOperation: ({ pkh, secret }: ActivationParams) => Promise<RPCActivateOperation>;
export declare const createOriginationOperation: ({ code, init, balance, delegate, storage, fee, gasLimit, storageLimit, mutez, }: OriginateParams) => Promise<RPCOriginationOperation>;
export declare const createTransferOperation: ({ to, amount, parameter, fee, gasLimit, storageLimit, mutez, }: TransferParams) => Promise<RPCTransferOperation>;
export declare const createSetDelegateOperation: ({ delegate, source, fee, gasLimit, storageLimit, }: DelegateParams) => Promise<RPCDelegateOperation>;
export declare const createRegisterDelegateOperation: ({ fee, gasLimit, storageLimit, }: RegisterDelegateParams, source: string) => Promise<RPCDelegateOperation>;
export declare const createRevealOperation: ({ fee, gasLimit, storageLimit, }: RevealParams, source: string, publicKey: string) => Promise<RPCRevealOperation>;
export declare const createRegisterGlobalConstantOperation: ({ value, source, fee, gasLimit, storageLimit, }: RegisterGlobalConstantParams) => Promise<RPCRegisterGlobalConstantOperation>;
export declare const createTransferTicketOperation: ({ ticketContents, ticketTy, ticketTicketer, ticketAmount, destination, entrypoint, source, fee, gasLimit, storageLimit, }: TransferTicketParams) => Promise<RPCTransferTicketOperation>;
export declare const createIncreasePaidStorageOperation: ({ source, fee, gasLimit, storageLimit, amount, destination, }: IncreasePaidStorageParams) => Promise<RPCIncreasePaidStorageOperation>;
export declare const createDrainDelegateOperation: ({ consensus_key, delegate, destination, }: DrainDelegateParams) => Promise<RPCDrainDelegateOperation>;
export declare const createBallotOperation: ({ source, proposal, ballot }: BallotParams) => Promise<RPCBallotOperation>;
export declare const createProposalsOperation: ({ source, proposals }: ProposalsParams) => Promise<RPCProposalsOperation>;
export declare const createUpdateConsensusKeyOperation: ({ source, fee, gasLimit, storageLimit, pk, }: UpdateConsensusKeyParams) => Promise<RPCUpdateConsensusKeyOperation>;
export declare const createSmartRollupAddMessagesOperation: ({ source, fee, gasLimit, storageLimit, message, }: SmartRollupAddMessagesParams) => Promise<RPCSmartRollupAddMessagesOperation>;
export declare const createSmartRollupOriginateOperation: ({ source, fee, gasLimit, storageLimit, pvmKind, kernel, originationProof, parametersType, }: SmartRollupOriginateParamsWithProof) => Promise<RPCSmartRollupOriginateOperation>;
