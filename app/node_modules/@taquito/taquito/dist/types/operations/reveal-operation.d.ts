import { OperationContentsAndResult, OperationContentsAndResultReveal, OperationContentsReveal } from '@taquito/rpc';
import { Context } from '../context';
import { Operation } from './operations';
import { FeeConsumingOperation, ForgedBytes, GasConsumingOperation, StorageConsumingOperation } from './types';
/**
 * @description Reveal operation provides utility functions to fetch a newly issued revelation
 */
export declare class RevealOperation extends Operation implements GasConsumingOperation, StorageConsumingOperation, FeeConsumingOperation {
    private readonly params;
    readonly source: string;
    constructor(hash: string, params: OperationContentsReveal, source: string, raw: ForgedBytes, results: OperationContentsAndResult[], context: Context);
    get operationResults(): OperationContentsAndResultReveal[];
    get status(): import("@taquito/rpc").OperationResultStatusEnum | "unknown";
    get fee(): number;
    get gasLimit(): number;
    get storageLimit(): number;
    get publicKey(): string;
    private sumProp;
    get consumedGas(): string;
    get consumedMilliGas(): string;
    get storageDiff(): string;
    get storageSize(): string;
    get errors(): import("@taquito/rpc").TezosGenericOperationError[];
}
