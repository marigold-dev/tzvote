import { ParameterValidationError, TaquitoError } from '@taquito/core';
/**
 *  @category Error
 *  @description Error that indicates an invalid Michelson being passed or used
 */
export declare class InvalidMichelsonError extends ParameterValidationError {
    readonly message: string;
    constructor(message: string);
}
/**
 *  @category Error
 *  @description Error that indicates an invalid type expression being passed or used
 */
export declare class InvalidTypeExpressionError extends ParameterValidationError {
    readonly message: string;
    constructor(message: string);
}
/**
 *  @category Error
 *  @description Error that indicates an invalid data expression being passed or used
 */
export declare class InvalidDataExpressionError extends ParameterValidationError {
    readonly message: string;
    constructor(message: string);
}
/**
 *  @category Error
 *  @description Error that indicates an invalid contract entrypoint being referenced or passed
 */
export declare class InvalidEntrypointError extends ParameterValidationError {
    readonly entrypoint?: string | undefined;
    constructor(entrypoint?: string | undefined);
}
/**
 *  @category Error
 *  @description Error that indicates a failure happening when trying to encode Tezos ID
 */
export declare class TezosIdEncodeError extends ParameterValidationError {
    readonly message: string;
    constructor(message: string);
}
/**
 *  @category Error
 *  @description Error that indicates a general error happening when trying to create a LongInteger
 */
export declare class LongIntegerError extends TaquitoError {
    readonly message: string;
    constructor(message: string);
}
/**
 *  @category Error
 *  @description Error that indicates a failure occurring when trying to parse a hex byte
 */
export declare class HexParseError extends TaquitoError {
    readonly hexByte: string;
    constructor(hexByte: string);
}
