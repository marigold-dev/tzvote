import { StorageKey, Storage, ExtendedWalletConnectPairingResponse } from '@airgap/beacon-types';
import { WalletConnectTransport } from '@airgap/beacon-transport-walletconnect';
import { KeyPair } from '@stablelib/ed25519';
import { SignClientTypes } from '@walletconnect/types';
/**
 * @internalapi
 *
 *
 */
export declare class DappWalletConnectTransport extends WalletConnectTransport<ExtendedWalletConnectPairingResponse, StorageKey.TRANSPORT_WALLETCONNECT_PEERS_DAPP> {
    constructor(name: string, keyPair: KeyPair, storage: Storage, wcOptions: SignClientTypes.Options);
    listenForNewPeer(newPeerListener: (peer: ExtendedWalletConnectPairingResponse) => void): Promise<void>;
    stopListeningForNewPeers(): Promise<void>;
}
