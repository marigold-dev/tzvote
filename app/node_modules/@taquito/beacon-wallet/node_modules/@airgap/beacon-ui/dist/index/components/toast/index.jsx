import { For, createSignal } from 'solid-js';
import { CloseIcon } from '../icons';
import Loader from '../loader';
function parseWallet(inputString, walletInfo) {
    const regex = /({{\s*wallet\s*}})/g;
    const parts = inputString.split(regex);
    return parts.map((part) => {
        if (part.match(regex)) {
            return (<>
          <img src={walletInfo.icon}></img>
          <h3>{walletInfo.name}</h3>
        </>);
        }
        else {
            return <p class="toast-label">{part}</p>;
        }
    });
}
const [showMoreInfo, setShowMoreInfo] = createSignal(true);
const Toast = (props) => {
    const hasWalletObject = props.label.includes('{{wallet}}') && props.walletInfo;
    const isRequestSentToast = props.label.includes('Request sent to');
    if (isRequestSentToast) {
        setShowMoreInfo(false);
        setTimeout(() => {
            setShowMoreInfo(true);
        }, 3000);
    }
    return (<div class={props.open ? 'toast-wrapper-show' : 'toast-wrapper-hide'}>
      <div class="toast-header">
        <Loader />
        {hasWalletObject && props.walletInfo && <>{parseWallet(props.label, props.walletInfo)}</>}
        {!hasWalletObject && <p class="toast-label">props.label</p>}
        {props.openWalletAction && (<div class="toast-action-button" onClick={() => {
                if (props && props.openWalletAction) {
                    props?.openWalletAction();
                }
            }}>
            Open Wallet
          </div>)}
        <div class="toast-button-icon" onClick={props.onClickClose}>
          <CloseIcon />
        </div>
      </div>
      {props.actions && showMoreInfo() && (<div class="toast-body">
          <For each={props.actions}>
            {(action) => (<div class="toast-action-wrapper">
                <p class={`toast-action-label ${action.isBold ? 'toast-action-bold' : ''}`}>
                  {action.text}
                </p>
                {action.actionText && (<div class="toast-action-button" onClick={() => {
                        if (action.actionCallback)
                            action.actionCallback();
                    }}>
                    {action.actionText}
                  </div>)}
              </div>)}
          </For>
        </div>)}
    </div>);
};
export default Toast;
