"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.InvalidNetworkOrAccount = exports.ActiveAccountUnspecified = exports.ActiveNetworkUnspecified = exports.MissingRequiredScope = exports.InvalidSession = exports.NotConnected = exports.InvalidReceivedSessionNamespace = void 0;
/**
 *  @category Error
 *  @description Error that indicates the wallet returned an invalid namespace
 */
var InvalidReceivedSessionNamespace = /** @class */ (function (_super) {
    __extends(InvalidReceivedSessionNamespace, _super);
    function InvalidReceivedSessionNamespace(messageWc, codeWc, type, data) {
        var _this = _super.call(this) || this;
        _this.messageWc = messageWc;
        _this.codeWc = codeWc;
        _this.data = data;
        _this.name = 'InvalidReceivedSessionNamespace';
        var baseMessage = "".concat(codeWc, ": ").concat(messageWc, ".");
        _this.message = data
            ? type === 'incomplete'
                ? " ".concat(baseMessage, " \"").concat(data, "\" is missing in the session namespace.")
                : " ".concat(baseMessage, " \"").concat(data, "\" is invalid.")
            : baseMessage;
        return _this;
    }
    return InvalidReceivedSessionNamespace;
}(Error));
exports.InvalidReceivedSessionNamespace = InvalidReceivedSessionNamespace;
/**
 *  @category Error
 *  @description Error that indicates there is no active session
 */
var NotConnected = /** @class */ (function (_super) {
    __extends(NotConnected, _super);
    function NotConnected() {
        var _this = _super.call(this, 'Not connected, no active session') || this;
        _this.name = 'NotConnected';
        return _this;
    }
    return NotConnected;
}(Error));
exports.NotConnected = NotConnected;
/**
 *  @category Error
 *  @description Error that indicates the session is invalid
 */
var InvalidSession = /** @class */ (function (_super) {
    __extends(InvalidSession, _super);
    function InvalidSession(message) {
        var _this = _super.call(this, message) || this;
        _this.name = 'InvalidSession';
        return _this;
    }
    return InvalidSession;
}(Error));
exports.InvalidSession = InvalidSession;
/**
 *  @category Error
 *  @description Error that indicates missing required permission scopes
 */
var MissingRequiredScope = /** @class */ (function (_super) {
    __extends(MissingRequiredScope, _super);
    function MissingRequiredScope(requiredScopes) {
        var _this = _super.call(this, "Required permission scope were not granted for \"".concat(requiredScopes, "\"")) || this;
        _this.requiredScopes = requiredScopes;
        _this.name = 'MissingRequiredScope';
        return _this;
    }
    return MissingRequiredScope;
}(Error));
exports.MissingRequiredScope = MissingRequiredScope;
/**
 *  @category Error
 *  @description Error that indicates the active network is not specified
 */
var ActiveNetworkUnspecified = /** @class */ (function (_super) {
    __extends(ActiveNetworkUnspecified, _super);
    function ActiveNetworkUnspecified() {
        var _this = _super.call(this, 'Please specify the active network using the "setActiveNetwork" method.') || this;
        _this.name = 'ActiveNetworkUnspecified';
        return _this;
    }
    return ActiveNetworkUnspecified;
}(Error));
exports.ActiveNetworkUnspecified = ActiveNetworkUnspecified;
/**
 *  @category Error
 *  @description Error that indicates the active account is not specified
 */
var ActiveAccountUnspecified = /** @class */ (function (_super) {
    __extends(ActiveAccountUnspecified, _super);
    function ActiveAccountUnspecified() {
        var _this = _super.call(this, 'Please specify the active account using the "setActiveAccount" method.') || this;
        _this.name = 'ActiveAccountUnspecified';
        return _this;
    }
    return ActiveAccountUnspecified;
}(Error));
exports.ActiveAccountUnspecified = ActiveAccountUnspecified;
/**
 *  @category Error
 *  @description Error that indicates the combinaison pkh-network is not part of the active session
 */
var InvalidNetworkOrAccount = /** @class */ (function (_super) {
    __extends(InvalidNetworkOrAccount, _super);
    function InvalidNetworkOrAccount(network, pkh) {
        var _this = _super.call(this, "No permission. The combinaison \"".concat(network, "\" and \"").concat(pkh, "\" is not part of the active session.")) || this;
        _this.network = network;
        _this.pkh = pkh;
        _this.name = 'InvalidNetworkOrAccount';
        return _this;
    }
    return InvalidNetworkOrAccount;
}(Error));
exports.InvalidNetworkOrAccount = InvalidNetworkOrAccount;
//# sourceMappingURL=error.js.map