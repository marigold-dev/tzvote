#!/usr/bin/env node
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const fs_1 = __importDefault(require("fs"));
const minimist_1 = __importDefault(require("minimist"));
const _1 = require("./");
const extensions_1 = require("./extensions");
const argv = (0, minimist_1.default)(process.argv.slice(2), {
    alias: {
        i: "include",
        e: "exclude",
    },
    boolean: ["optimistic", "useEnumType"],
});
async function generate(spec, dest, opts) {
    (0, extensions_1.processConfigFileIfExists)();
    const code = await (0, _1.generateSource)(spec, opts);
    if (dest)
        fs_1.default.writeFileSync(dest, code);
    else
        console.log(code);
}
const { include, exclude, optimistic, useEnumType } = argv;
const [spec, dest] = argv._;
if (!spec) {
    console.error(`
    Usage:
    oazapfts <spec> [filename]

    Options:
    --exclude, -e <tag to exclude>
    --include, -i <tag to include>
    --optimistic
    --useEnumType
`);
    process.exit(1);
}
generate(spec, dest, {
    include,
    exclude,
    optimistic,
    useEnumType,
});
//# sourceMappingURL=cli.js.map