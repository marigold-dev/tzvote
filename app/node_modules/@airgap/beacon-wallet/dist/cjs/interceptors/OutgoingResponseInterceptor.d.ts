import { AppMetadataManager, PermissionManager } from '@airgap/beacon-core';
import { BeaconMessage, BeaconResponseInputMessage, AppMetadata, BeaconRequestMessage, BeaconMessageWrapper, BeaconBaseMessage } from '@airgap/beacon-types';
interface OutgoingResponseInterceptorOptions {
    senderId: string;
    request: BeaconRequestMessage | BeaconMessageWrapper<BeaconBaseMessage>;
    message: BeaconResponseInputMessage;
    ownAppMetadata: AppMetadata;
    permissionManager: PermissionManager;
    appMetadataManager: AppMetadataManager;
    interceptorCallback(message: BeaconMessage): void;
}
/**
 * @internalapi
 *
 * The OutgoingResponseInterceptor is used in the WalletClient to intercept an outgoing response and enrich it with data.
 */
export declare class OutgoingResponseInterceptor {
    static intercept(config: OutgoingResponseInterceptorOptions): Promise<void>;
    private static handleV3Message;
    private static handleV2Message;
}
export {};
