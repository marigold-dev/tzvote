import { BeaconRequestOutputMessage, ConnectionContext, BeaconRequestMessage, BeaconMessageWrapper, BeaconBaseMessage } from '@airgap/beacon-types';
import { AppMetadataManager } from '@airgap/beacon-core';
interface IncomingRequestInterceptorOptions {
    message: BeaconRequestMessage | BeaconMessageWrapper<BeaconBaseMessage>;
    connectionInfo: ConnectionContext;
    appMetadataManager: AppMetadataManager;
    interceptorCallback(message: BeaconRequestOutputMessage, connectionInfo: ConnectionContext): void;
}
/**
 * @internalapi
 *
 * The IncomingRequestInterceptor is used in the WalletClient to intercept an incoming request and enrich it with data, like app metadata.
 */
export declare class IncomingRequestInterceptor {
    /**
     * The method that is called during the interception
     *
     * @param config
     */
    static intercept(config: IncomingRequestInterceptorOptions): Promise<void>;
    private static getAppMetadata;
    private static handleV2Message;
    private static handleV3Message;
}
export {};
