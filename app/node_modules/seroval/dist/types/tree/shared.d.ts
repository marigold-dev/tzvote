import { ParserContext } from '../context';
import { AsyncServerValue, ErrorValue } from '../types';
export declare function getErrorConstructorName(error: ErrorValue): "EvalError" | "RangeError" | "ReferenceError" | "SyntaxError" | "TypeError" | "URIError" | "Error";
export declare function getErrorConstructor(errorName: string): ErrorConstructor;
export declare function getErrorOptions(ctx: ParserContext, error: Error): Record<string, any> | undefined;
export declare function getIterableOptions(obj: Iterable<any>): Record<string, unknown> | undefined;
export declare function isIterable(value: unknown): value is Iterable<AsyncServerValue>;
export declare function getTypedArrayConstructor(name: string): Int8ArrayConstructor | Uint8ArrayConstructor | Uint8ClampedArrayConstructor | Int16ArrayConstructor | Uint16ArrayConstructor | Int32ArrayConstructor | Uint32ArrayConstructor | Float32ArrayConstructor | Float64ArrayConstructor | BigInt64ArrayConstructor | BigUint64ArrayConstructor;
export declare function isValidIdentifier(name: string): boolean;
