export declare const enum Symbols {
    AsyncIterator = 0,
    HasInstance = 1,
    IsConcatSpreadable = 2,
    Iterator = 3,
    Match = 4,
    MatchAll = 5,
    Replace = 6,
    Search = 7,
    Species = 8,
    Split = 9,
    ToPrimitive = 10,
    ToStringTag = 11,
    Unscopables = 12
}
export declare const SYMBOL_STRING: Record<Symbols, string>;
export declare const INV_SYMBOL_REF: {
    [Symbol.asyncIterator]: Symbols;
    [Symbol.hasInstance]: Symbols;
    [Symbol.isConcatSpreadable]: Symbols;
    [Symbol.iterator]: Symbols;
    [Symbol.match]: Symbols;
    [Symbol.matchAll]: Symbols;
    [Symbol.replace]: Symbols;
    [Symbol.search]: Symbols;
    [Symbol.species]: Symbols;
    [Symbol.split]: Symbols;
    [Symbol.toPrimitive]: Symbols;
    [Symbol.toStringTag]: Symbols;
    [Symbol.unscopables]: Symbols;
};
export type WellKnownSymbols = keyof typeof INV_SYMBOL_REF;
export declare const SYMBOL_REF: Record<Symbols, WellKnownSymbols>;
