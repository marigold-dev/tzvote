{
  "version": 3,
  "sources": ["../../react-router-dom/modules/BrowserRouter.js", "../../react-router-dom/modules/HashRouter.js", "../../react-router-dom/modules/utils/locationUtils.js", "../../react-router-dom/modules/Link.js", "../../react-router-dom/modules/NavLink.js"],
  "sourcesContent": ["import React from \"react\";\nimport { Router } from \"react-router\";\nimport { createBrowserHistory as createHistory } from \"history\";\nimport PropTypes from \"prop-types\";\nimport warning from \"tiny-warning\";\n\n/**\n * The public API for a <Router> that uses HTML5 history.\n */\nclass BrowserRouter extends React.Component {\n  history = createHistory(this.props);\n\n  render() {\n    return <Router history={this.history} children={this.props.children} />;\n  }\n}\n\nif (__DEV__) {\n  BrowserRouter.propTypes = {\n    basename: PropTypes.string,\n    children: PropTypes.node,\n    forceRefresh: PropTypes.bool,\n    getUserConfirmation: PropTypes.func,\n    keyLength: PropTypes.number\n  };\n\n  BrowserRouter.prototype.componentDidMount = function() {\n    warning(\n      !this.props.history,\n      \"<BrowserRouter> ignores the history prop. To use a custom history, \" +\n        \"use `import { Router }` instead of `import { BrowserRouter as Router }`.\"\n    );\n  };\n}\n\nexport default BrowserRouter;\n", "import React from \"react\";\nimport { Router } from \"react-router\";\nimport { createHashHistory as createHistory } from \"history\";\nimport PropTypes from \"prop-types\";\nimport warning from \"tiny-warning\";\n\n/**\n * The public API for a <Router> that uses window.location.hash.\n */\nclass HashRouter extends React.Component {\n  history = createHistory(this.props);\n\n  render() {\n    return <Router history={this.history} children={this.props.children} />;\n  }\n}\n\nif (__DEV__) {\n  HashRouter.propTypes = {\n    basename: PropTypes.string,\n    children: PropTypes.node,\n    getUserConfirmation: PropTypes.func,\n    hashType: PropTypes.oneOf([\"hashbang\", \"noslash\", \"slash\"])\n  };\n\n  HashRouter.prototype.componentDidMount = function() {\n    warning(\n      !this.props.history,\n      \"<HashRouter> ignores the history prop. To use a custom history, \" +\n        \"use `import { Router }` instead of `import { HashRouter as Router }`.\"\n    );\n  };\n}\n\nexport default HashRouter;\n", "import { createLocation } from \"history\";\n\nexport const resolveToLocation = (to, currentLocation) =>\n  typeof to === \"function\" ? to(currentLocation) : to;\n\nexport const normalizeToLocation = (to, currentLocation) => {\n  return typeof to === \"string\"\n    ? createLocation(to, null, null, currentLocation)\n    : to;\n};\n", "import React from \"react\";\nimport { __RouterContext as RouterContext } from \"react-router\";\nimport { createPath } from 'history';\nimport PropTypes from \"prop-types\";\nimport invariant from \"tiny-invariant\";\nimport {\n  resolveToLocation,\n  normalizeToLocation\n} from \"./utils/locationUtils.js\";\n\n// React 15 compat\nconst forwardRefShim = C => C;\nlet { forwardRef } = React;\nif (typeof forwardRef === \"undefined\") {\n  forwardRef = forwardRefShim;\n}\n\nfunction isModifiedEvent(event) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\n\nconst LinkAnchor = forwardRef(\n  (\n    {\n      innerRef, // TODO: deprecate\n      navigate,\n      onClick,\n      ...rest\n    },\n    forwardedRef\n  ) => {\n    const { target } = rest;\n\n    let props = {\n      ...rest,\n      onClick: event => {\n        try {\n          if (onClick) onClick(event);\n        } catch (ex) {\n          event.preventDefault();\n          throw ex;\n        }\n\n        if (\n          !event.defaultPrevented && // onClick prevented default\n          event.button === 0 && // ignore everything but left clicks\n          (!target || target === \"_self\") && // let browser handle \"target=_blank\" etc.\n          !isModifiedEvent(event) // ignore clicks with modifier keys\n        ) {\n          event.preventDefault();\n          navigate();\n        }\n      }\n    };\n\n    // React 15 compat\n    if (forwardRefShim !== forwardRef) {\n      props.ref = forwardedRef || innerRef;\n    } else {\n      props.ref = innerRef;\n    }\n\n    /* eslint-disable-next-line jsx-a11y/anchor-has-content */\n    return <a {...props} />;\n  }\n);\n\nif (__DEV__) {\n  LinkAnchor.displayName = \"LinkAnchor\";\n}\n\n/**\n * The public API for rendering a history-aware <a>.\n */\nconst Link = forwardRef(\n  (\n    {\n      component = LinkAnchor,\n      replace,\n      to,\n      innerRef, // TODO: deprecate\n      ...rest\n    },\n    forwardedRef\n  ) => {\n    return (\n      <RouterContext.Consumer>\n        {context => {\n          invariant(context, \"You should not use <Link> outside a <Router>\");\n\n          const { history } = context;\n\n          const location = normalizeToLocation(\n            resolveToLocation(to, context.location),\n            context.location\n          );\n\n          const href = location ? history.createHref(location) : \"\";\n          const props = {\n            ...rest,\n            href,\n            navigate() {\n              const location = resolveToLocation(to, context.location);\n              const isDuplicateNavigation = createPath(context.location) === createPath(normalizeToLocation(location));\n              const method = (replace || isDuplicateNavigation) ? history.replace : history.push;\n\n              method(location);\n            }\n          };\n\n          // React 15 compat\n          if (forwardRefShim !== forwardRef) {\n            props.ref = forwardedRef || innerRef;\n          } else {\n            props.innerRef = innerRef;\n          }\n\n          return React.createElement(component, props);\n        }}\n      </RouterContext.Consumer>\n    );\n  }\n);\n\nif (__DEV__) {\n  const toType = PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.object,\n    PropTypes.func\n  ]);\n  const refType = PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.func,\n    PropTypes.shape({ current: PropTypes.any })\n  ]);\n\n  Link.displayName = \"Link\";\n\n  Link.propTypes = {\n    innerRef: refType,\n    onClick: PropTypes.func,\n    replace: PropTypes.bool,\n    target: PropTypes.string,\n    to: toType.isRequired\n  };\n}\n\nexport default Link;\n", "import React from \"react\";\nimport { __RouterContext as RouterContext, matchPath } from \"react-router\";\nimport PropTypes from \"prop-types\";\nimport invariant from \"tiny-invariant\";\nimport Link from \"./Link.js\";\nimport {\n  resolveToLocation,\n  normalizeToLocation\n} from \"./utils/locationUtils.js\";\n\n// React 15 compat\nconst forwardRefShim = C => C;\nlet { forwardRef } = React;\nif (typeof forwardRef === \"undefined\") {\n  forwardRef = forwardRefShim;\n}\n\nfunction joinClassnames(...classnames) {\n  return classnames.filter(i => i).join(\" \");\n}\n\n/**\n * A <Link> wrapper that knows if it's \"active\" or not.\n */\nconst NavLink = forwardRef(\n  (\n    {\n      \"aria-current\": ariaCurrent = \"page\",\n      activeClassName = \"active\", // TODO: deprecate\n      activeStyle, // TODO: deprecate\n      className: classNameProp,\n      exact,\n      isActive: isActiveProp,\n      location: locationProp,\n      sensitive,\n      strict,\n      style: styleProp,\n      to,\n      innerRef, // TODO: deprecate\n      ...rest\n    },\n    forwardedRef\n  ) => {\n    return (\n      <RouterContext.Consumer>\n        {context => {\n          invariant(context, \"You should not use <NavLink> outside a <Router>\");\n\n          const currentLocation = locationProp || context.location;\n          const toLocation = normalizeToLocation(\n            resolveToLocation(to, currentLocation),\n            currentLocation\n          );\n          const { pathname: path } = toLocation;\n          // Regex taken from: https://github.com/pillarjs/path-to-regexp/blob/master/index.js#L202\n          const escapedPath =\n            path && path.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g, \"\\\\$1\");\n\n          const match = escapedPath\n            ? matchPath(currentLocation.pathname, {\n                path: escapedPath,\n                exact,\n                sensitive,\n                strict\n              })\n            : null;\n          const isActive = !!(isActiveProp\n            ? isActiveProp(match, currentLocation)\n            : match);\n\n          let className =\n            typeof classNameProp === \"function\"\n              ? classNameProp(isActive)\n              : classNameProp;\n\n          let style =\n            typeof styleProp === \"function\" ? styleProp(isActive) : styleProp;\n\n          if (isActive) {\n            className = joinClassnames(className, activeClassName);\n            style = { ...style, ...activeStyle };\n          }\n\n          const props = {\n            \"aria-current\": (isActive && ariaCurrent) || null,\n            className,\n            style,\n            to: toLocation,\n            ...rest\n          };\n\n          // React 15 compat\n          if (forwardRefShim !== forwardRef) {\n            props.ref = forwardedRef || innerRef;\n          } else {\n            props.innerRef = innerRef;\n          }\n\n          return <Link {...props} />;\n        }}\n      </RouterContext.Consumer>\n    );\n  }\n);\n\nif (__DEV__) {\n  NavLink.displayName = \"NavLink\";\n\n  const ariaCurrentType = PropTypes.oneOf([\n    \"page\",\n    \"step\",\n    \"location\",\n    \"date\",\n    \"time\",\n    \"true\",\n    \"false\"\n  ]);\n\n  NavLink.propTypes = {\n    ...Link.propTypes,\n    \"aria-current\": ariaCurrentType,\n    activeClassName: PropTypes.string,\n    activeStyle: PropTypes.object,\n    className: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n    exact: PropTypes.bool,\n    isActive: PropTypes.func,\n    location: PropTypes.object,\n    sensitive: PropTypes.bool,\n    strict: PropTypes.bool,\n    style: PropTypes.oneOfType([PropTypes.object, PropTypes.func])\n  };\n}\n\nexport default NavLink;\n"],
  "mappings": "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",
  "names": ["BrowserRouter", "history", "createHistory", "props", "render", "React", "children", "Component", "propTypes", "basename", "PropTypes", "string", "node", "forceRefresh", "bool", "getUserConfirmation", "func", "keyLength", "number", "prototype", "componentDidMount", "warning", "HashRouter", "hashType", "oneOf", "resolveToLocation", "to", "currentLocation", "normalizeToLocation", "createLocation", "forwardRefShim", "C", "forwardRef", "isModifiedEvent", "event", "metaKey", "altKey", "ctrlKey", "shiftKey", "LinkAnchor", "forwardedRef", "innerRef", "navigate", "onClick", "rest", "target", "ex", "preventDefault", "defaultPrevented", "button", "ref", "displayName", "Link", "component", "replace", "RouterContext", "context", "invariant", "location", "href", "createHref", "isDuplicateNavigation", "createPath", "method", "push", "createElement", "toType", "oneOfType", "object", "refType", "shape", "current", "any", "isRequired", "joinClassnames", "classnames", "filter", "i", "join", "NavLink", "ariaCurrent", "activeClassName", "activeStyle", "classNameProp", "className", "exact", "isActiveProp", "isActive", "locationProp", "sensitive", "strict", "styleProp", "style", "toLocation", "path", "pathname", "escapedPath", "match", "matchPath", "ariaCurrentType"]
}
