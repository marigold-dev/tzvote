{ parameter (or (or (address %addVoter) (address %removeVoter)) (string %vote)) ;
  storage
    (pair (pair (pair (timestamp %from) (string %name))
                (pair (list %options string) (address %owner)))
          (pair (pair (list %registeredVoters address) (map %results string int))
                (pair (timestamp %to) (map %votes address string)))) ;
  code { LAMBDA
           (pair (lambda address bool) (list address))
           (option address)
           { LEFT (option address) ;
             LOOP_LEFT
               { DUP ;
                 CAR ;
                 SWAP ;
                 CDR ;
                 IF_CONS
                   { DUP ;
                     DUP 4 ;
                     SWAP ;
                     EXEC ;
                     IF { SWAP ;
                          DIG 2 ;
                          DROP 2 ;
                          SOME ;
                          RIGHT (pair (lambda address bool) (list address)) }
                        { DROP ; SWAP ; PAIR ; LEFT (option address) } }
                   { DROP ; NONE address ; RIGHT (pair (lambda address bool) (list address)) } } } ;
         LAMBDA (list address) (list address) { NIL address ; SWAP ; ITER { CONS } } ;
         DUP 3 ;
         CDR ;
         DIG 3 ;
         CAR ;
         IF_LEFT
           { IF_LEFT
               { DIG 2 ;
                 DROP ;
                 SWAP ;
                 DUP ;
                 CAR ;
                 CDR ;
                 CDR ;
                 SOURCE ;
                 COMPARE ;
                 NEQ ;
                 IF { PUSH string "User has to be owner" ; FAILWITH } {} ;
                 DUP ;
                 CDR ;
                 CAR ;
                 CAR ;
                 DUP 3 ;
                 LAMBDA (pair address address) bool { UNPAIR ; SWAP ; COMPARE ; EQ } ;
                 SWAP ;
                 APPLY ;
                 PAIR ;
                 DIG 3 ;
                 SWAP ;
                 EXEC ;
                 NONE address ;
                 SWAP ;
                 COMPARE ;
                 NEQ ;
                 IF { PUSH string "User is already registered" ; FAILWITH } {} ;
                 DUP ;
                 CDR ;
                 CDR ;
                 CAR ;
                 NOW ;
                 COMPARE ;
                 GT ;
                 IF { PUSH string "Too late to add voter" ; FAILWITH } {} ;
                 DUP ;
                 CDR ;
                 CDR ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 CAR ;
                 CDR ;
                 DUP 3 ;
                 CDR ;
                 CAR ;
                 CAR ;
                 DIG 4 ;
                 CONS ;
                 PAIR ;
                 PAIR ;
                 SWAP ;
                 CAR ;
                 PAIR ;
                 NIL operation ;
                 PAIR }
               { SWAP ;
                 DUP ;
                 CAR ;
                 CDR ;
                 CDR ;
                 SOURCE ;
                 COMPARE ;
                 NEQ ;
                 IF { PUSH string "User has to be owner" ; FAILWITH } {} ;
                 DUP ;
                 CDR ;
                 CAR ;
                 CAR ;
                 DUP 3 ;
                 LAMBDA (pair address address) bool { UNPAIR ; SWAP ; COMPARE ; EQ } ;
                 SWAP ;
                 APPLY ;
                 PAIR ;
                 DIG 4 ;
                 SWAP ;
                 EXEC ;
                 NONE address ;
                 SWAP ;
                 COMPARE ;
                 EQ ;
                 IF { PUSH string "User not found" ; FAILWITH } {} ;
                 DUP ;
                 CDR ;
                 CDR ;
                 CAR ;
                 NOW ;
                 COMPARE ;
                 GT ;
                 IF { PUSH string "Too late to remove voter" ; FAILWITH } {} ;
                 DUP ;
                 CDR ;
                 CDR ;
                 CDR ;
                 DUP 3 ;
                 GET ;
                 IF_NONE
                   {}
                   { PUSH string "  already exists for this user, we cannot remove it" ;
                     SWAP ;
                     PUSH string "A vote with option " ;
                     CONCAT ;
                     CONCAT ;
                     FAILWITH } ;
                 DUP ;
                 CDR ;
                 CDR ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 CAR ;
                 CDR ;
                 NIL address ;
                 DUP 4 ;
                 CDR ;
                 CAR ;
                 CAR ;
                 DIG 5 ;
                 LAMBDA (pair address address) bool { UNPAIR ; SWAP ; COMPARE ; EQ } ;
                 SWAP ;
                 APPLY ;
                 PAIR ;
                 PAIR ;
                 LEFT (list address) ;
                 LOOP_LEFT
                   { DUP ;
                     CAR ;
                     CAR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     DIG 2 ;
                     CAR ;
                     CDR ;
                     IF_CONS
                       { DUP ;
                         DUP 5 ;
                         SWAP ;
                         EXEC ;
                         IF { DIG 3 ;
                              DROP 2 ;
                              SWAP ;
                              DUP 6 ;
                              SWAP ;
                              EXEC ;
                              NIL address ;
                              SWAP ;
                              ITER { CONS } ;
                              ITER { CONS } ;
                              RIGHT (pair (pair (lambda address bool) (list address)) (list address)) }
                            { DIG 2 ; SWAP ; CONS ; SWAP ; DIG 2 ; PAIR ; PAIR ; LEFT (list address) } }
                       { SWAP ;
                         DROP ;
                         DUP 5 ;
                         SWAP ;
                         EXEC ;
                         RIGHT (pair (pair (lambda address bool) (list address)) (list address)) } } ;
                 DIG 4 ;
                 DROP ;
                 PAIR ;
                 PAIR ;
                 SWAP ;
                 CAR ;
                 PAIR ;
                 NIL operation ;
                 PAIR } }
           { DIG 2 ;
             DROP ;
             SWAP ;
             DUP ;
             CDR ;
             CAR ;
             CAR ;
             LAMBDA address bool { SOURCE ; SWAP ; COMPARE ; EQ } ;
             PAIR ;
             DIG 3 ;
             SWAP ;
             EXEC ;
             NONE address ;
             SWAP ;
             COMPARE ;
             EQ ;
             IF { PUSH string "User is not registered" ; FAILWITH } {} ;
             DUP ;
             CAR ;
             CDR ;
             CAR ;
             DUP 3 ;
             LAMBDA (pair string string) bool { UNPAIR ; SWAP ; COMPARE ; EQ } ;
             SWAP ;
             APPLY ;
             PAIR ;
             LEFT (option string) ;
             LOOP_LEFT
               { DUP ;
                 CAR ;
                 SWAP ;
                 CDR ;
                 IF_CONS
                   { DUP ;
                     DUP 4 ;
                     SWAP ;
                     EXEC ;
                     IF { SWAP ; DIG 2 ; DROP 2 ; SOME ; RIGHT (pair (lambda string bool) (list string)) }
                        { DROP ; SWAP ; PAIR ; LEFT (option string) } }
                   { DROP ; NONE string ; RIGHT (pair (lambda string bool) (list string)) } } ;
             NONE string ;
             SWAP ;
             COMPARE ;
             EQ ;
             IF { PUSH string "Option does not exist" ; FAILWITH } {} ;
             DUP ;
             CDR ;
             CDR ;
             CDR ;
             SOURCE ;
             GET ;
             IF_NONE
               {}
               { PUSH string "  already exists for this user" ;
                 SWAP ;
                 PUSH string "A vote with option " ;
                 CONCAT ;
                 CONCAT ;
                 FAILWITH } ;
             DUP ;
             CDR ;
             CDR ;
             CAR ;
             NOW ;
             COMPARE ;
             GT ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CAR ;
             CAR ;
             NOW ;
             COMPARE ;
             LT ;
             OR ;
             IF { PUSH string "Not yet the time to vote" ; FAILWITH } {} ;
             DUP ;
             CDR ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CDR ;
             CAR ;
             CDR ;
             DUP 4 ;
             GET ;
             IF_NONE
               { SWAP ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 CAR ;
                 CDR ;
                 PUSH int 1 ;
                 DUP 5 ;
                 SWAP ;
                 SOME ;
                 SWAP ;
                 UPDATE }
               { DUP 3 ;
                 CDR ;
                 CAR ;
                 CDR ;
                 PUSH int 1 ;
                 DIG 2 ;
                 ADD ;
                 DUP 5 ;
                 SWAP ;
                 SOME ;
                 SWAP ;
                 UPDATE } ;
             DUP 3 ;
             CDR ;
             CAR ;
             CAR ;
             PAIR ;
             PAIR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             PAIR ;
             SWAP ;
             CDR ;
             CDR ;
             CDR ;
             DIG 2 ;
             SOME ;
             SOURCE ;
             UPDATE ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CDR ;
             CDR ;
             CAR ;
             PAIR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CDR ;
             CAR ;
             PAIR ;
             SWAP ;
             CAR ;
             PAIR ;
             NIL operation ;
             PAIR } } }

