#include "./shared/tezosTemplate3Types.jsligo"


const getCurrentVotingPeriod = ([protocol,opt,senderHashkey, contract_callback , store]: [string,string, key_hash, contract<returned_val>, oracleStorage]): oracle_return_ => { 
    let op : operation = Tezos.transaction(
        match(Map.find_opt(protocol,store.votingPeriodIndexes), { 
            Some : (currentVotingPeriodIndex : nat) => [currentVotingPeriodIndex,opt,senderHashkey],
            None : () => failwith ("Cannot find current voting period index for protocol " + protocol)}), 
            (0 as mutez),
            contract_callback
            );
            
            return [list([op]) ,store];
        };
        
        
const updateCurrentVotingPeriod = ([protocol , currentVotingIndex , store]: [string, nat , oracleStorage]): oracle_return_ => {
    if(Tezos.get_sender() != store.admin) return failwith ("You are not the admin !!!")
    return [(list([]) as list <operation>) ,{...store,votingPeriodIndexes:Map.add(protocol, currentVotingIndex, store.votingPeriodIndexes)}];
};

export const main = ([action, store] : [oracleParameter , oracleStorage]) : oracle_return_ => {
    return match (action, {
        GetCurrentVotingPeriod: (params: oracle_param) => getCurrentVotingPeriod([params[0],params[1],params[2],params[3],store]),
        UpdateCurrentVotingPeriod: (params: [string,nat]) => updateCurrentVotingPeriod([params[0], params[1],store])
    }
    )
};

