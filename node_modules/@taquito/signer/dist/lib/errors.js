"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ToBeImplemented = exports.PrivateKeyError = exports.InvalidSeedLengthError = exports.InvalidCurveError = exports.InvalidBitSize = exports.InvalidMnemonicError = exports.InvalidDerivationPathError = void 0;
class InvalidDerivationPathError extends Error {
    constructor(message) {
        super(message);
        this.message = message;
        this.name = 'InvalidDerivationPathError';
    }
}
exports.InvalidDerivationPathError = InvalidDerivationPathError;
class InvalidMnemonicError extends Error {
    constructor(message) {
        super(message);
        this.message = message;
        this.name = 'InvalidMnemonicError';
    }
}
exports.InvalidMnemonicError = InvalidMnemonicError;
class InvalidBitSize extends Error {
    constructor(message) {
        super(message);
        this.message = message;
        this.name = 'InvalidBitSize';
    }
}
exports.InvalidBitSize = InvalidBitSize;
class InvalidCurveError extends Error {
    constructor(curve) {
        super(`This Curve is not supported: ${curve}`);
        this.curve = curve;
        this.name = 'InvalidCurveError';
    }
}
exports.InvalidCurveError = InvalidCurveError;
class InvalidSeedLengthError extends Error {
    constructor(seedLength) {
        super(`The seed has an invalid length: ${seedLength}`);
        this.seedLength = seedLength;
        this.name = 'InvalidSeedLengthError';
    }
}
exports.InvalidSeedLengthError = InvalidSeedLengthError;
class PrivateKeyError extends Error {
    constructor(message) {
        super(message);
        this.message = message;
        this.name = 'PrivateKeyError';
    }
}
exports.PrivateKeyError = PrivateKeyError;
class ToBeImplemented extends Error {
    constructor() {
        super('This feature is under developement');
        this.name = 'ToBeImplemented';
    }
}
exports.ToBeImplemented = ToBeImplemented;
//# sourceMappingURL=errors.js.map