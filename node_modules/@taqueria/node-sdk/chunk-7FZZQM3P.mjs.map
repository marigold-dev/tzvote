{"version":3,"sources":["types.ts"],"sourcesContent":["import { ProxyTaskArgs, RequestArgs } from '@taqueria/protocol';\nimport * as Protocol from '@taqueria/protocol';\nimport * as Environment from '@taqueria/protocol/Environment';\nimport type { i18n } from '@taqueria/protocol/i18n';\nimport * as LoadedConfig from '@taqueria/protocol/LoadedConfig';\nimport * as MetadataConfig from '@taqueria/protocol/MetadataConfig';\nimport * as NetworkConfig from '@taqueria/protocol/NetworkConfig';\nimport * as Operation from '@taqueria/protocol/Operation';\nimport * as Option from '@taqueria/protocol/Option';\nimport * as PersistentState from '@taqueria/protocol/PersistentState';\nimport * as PluginInfo from '@taqueria/protocol/PluginInfo';\nimport * as PluginSchema from '@taqueria/protocol/PluginSchema';\nimport * as PositionalArg from '@taqueria/protocol/PositionalArg';\nimport * as SandboxAccountConfig from '@taqueria/protocol/SandboxAccountConfig';\nimport * as SandboxConfig from '@taqueria/protocol/SandboxConfig';\nimport * as SanitizedAbsPath from '@taqueria/protocol/SanitizedAbsPath';\nimport * as SanitizedPath from '@taqueria/protocol/SanitizedPath';\nimport * as TaqError from '@taqueria/protocol/TaqError';\nimport * as Task from '@taqueria/protocol/Task';\nimport * as Template from '@taqueria/protocol/Template';\nexport {\n\tEnvironment,\n\tLoadedConfig,\n\tMetadataConfig,\n\tNetworkConfig,\n\tOperation,\n\tOption,\n\tPersistentState,\n\tPluginSchema,\n\tPositionalArg,\n\tProtocol,\n\tSandboxAccountConfig,\n\tSandboxConfig,\n\tSanitizedAbsPath,\n\tSanitizedPath,\n\tTaqError,\n\tTask,\n\tTemplate,\n};\n\nexport type { ProxyTaskArgs, RequestArgs };\n\nexport interface LikeAPromise<Success, TaqError> extends Promise<Success> {\n}\n\nexport type PositiveInt = 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12 | 13 | 14 | 15;\n\nexport type i18nMessage = string | { message: string; numOfArguments: PositiveInt };\n\nexport interface StdIO {\n\tstdout: string;\n\tstderr: string;\n}\n\nexport type pluginDefiner = <T extends RequestArgs.t>(parsedArgs: T, i18n: i18n) => PluginSchema.RawPluginSchema;\n"],"mappings":";;;;;;;;;AACA,YAAY,cAAc;AAC1B,YAAY,iBAAiB;AAE7B,YAAY,kBAAkB;AAC9B,YAAY,oBAAoB;AAChC,YAAY,mBAAmB;AAC/B,YAAY,eAAe;AAC3B,YAAY,YAAY;AACxB,YAAY,qBAAqB;AAEjC,YAAY,kBAAkB;AAC9B,YAAY,mBAAmB;AAC/B,YAAY,0BAA0B;AACtC,YAAY,mBAAmB;AAC/B,YAAY,sBAAsB;AAClC,YAAY,mBAAmB;AAC/B,YAAY,cAAc;AAC1B,YAAY,UAAU;AACtB,YAAY,cAAc;","names":[]}