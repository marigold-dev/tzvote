export * as ECDSA from './ecdsa';
export * as Ed25519 from './ed25519';
export declare const Hard = 2147483648;
export interface ExtendedKey {
    readonly chainCode: Uint8Array;
    derive(index: number): ExtendedKey;
    derivePath(path: Iterable<number>): ExtendedKey;
}
export interface ExtendedPrivateKey extends ExtendedKey {
    derive(index: number): ExtendedPrivateKey;
    derivePath(path: number[]): ExtendedPrivateKey;
}
export declare class Path extends Array<number> {
    static from(iterable: Iterable<number> | ArrayLike<number>): Path;
    /**
     *
     * @param s derivation path eg: 44'/1729'/0'/0'
     * @returns applied hardened values
     */
    static fromString(s: string): Path;
}
