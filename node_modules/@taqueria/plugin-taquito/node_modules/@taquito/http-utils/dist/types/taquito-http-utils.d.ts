/**
 * @packageDocumentation
 * @module @taquito/http-utils
 */
export * from './status_code';
export { VERSION } from './version';
export { HttpRequestFailed, HttpResponseError } from './errors';
declare type ObjectType = Record<string, any>;
export interface HttpRequestOptions {
    url: string;
    method?: 'GET' | 'POST';
    timeout?: number;
    json?: boolean;
    query?: ObjectType;
    headers?: {
        [key: string]: string;
    };
    mimeType?: string;
}
export declare class HttpBackend {
    private timeout;
    constructor(timeout?: number);
    protected serialize(obj?: ObjectType): string;
    /**
     *
     * @param options contains options to be passed for the HTTP request (url, method and timeout)
     * @throws {@link HttpRequestFailed} | {@link HttpResponseError}
     */
    createRequest<T>({ url, method, timeout, query, headers, json }: HttpRequestOptions, data?: object | string): Promise<T>;
}
