import { z } from 'zod';
export declare const rawSchema: z.ZodObject<{
    disableAutostartWithSandbox: z.ZodDefault<z.ZodBoolean>;
    postgresqlPort: z.ZodDefault<z.ZodNumber>;
    apiPort: z.ZodDefault<z.ZodNumber>;
}, "strip", z.ZodTypeAny, {
    disableAutostartWithSandbox: boolean;
    postgresqlPort: number;
    apiPort: number;
}, {
    disableAutostartWithSandbox?: boolean | undefined;
    postgresqlPort?: number | undefined;
    apiPort?: number | undefined;
}>;
export declare const generatedSchemas: {
    rawSchema: z.ZodType<any, z.ZodTypeDef, any>;
    internalSchema: z.ZodType<any, z.ZodTypeDef, any>;
    schema: z.ZodEffects<z.ZodType<any, z.ZodTypeDef, any>, {
        disableAutostartWithSandbox: boolean;
        postgresqlPort: number;
        apiPort: number;
    } & {
        readonly __type: any;
    }, any>;
}, factory: {
    make: (input: {
        disableAutostartWithSandbox: boolean;
        postgresqlPort: number;
        apiPort: number;
    }) => import("fluture").FutureInstance<import("./TaqError").TaqError, {
        disableAutostartWithSandbox: boolean;
        postgresqlPort: number;
        apiPort: number;
    } & {
        readonly __type: any;
    }>;
    of: (input: unknown) => import("fluture").FutureInstance<import("./TaqError").TaqError, {
        disableAutostartWithSandbox: boolean;
        postgresqlPort: number;
        apiPort: number;
    } & {
        readonly __type: any;
    }>;
    create: (input: {
        disableAutostartWithSandbox: boolean;
        postgresqlPort: number;
        apiPort: number;
    }) => {
        disableAutostartWithSandbox: boolean;
        postgresqlPort: number;
        apiPort: number;
    } & {
        readonly __type: any;
    };
    from: (input: unknown) => {
        disableAutostartWithSandbox: boolean;
        postgresqlPort: number;
        apiPort: number;
    } & {
        readonly __type: any;
    };
};
export type TzKtConfig = z.infer<typeof generatedSchemas.schema>;
export type t = TzKtConfig;
export declare const create: (input: {
    disableAutostartWithSandbox: boolean;
    postgresqlPort: number;
    apiPort: number;
}) => {
    disableAutostartWithSandbox: boolean;
    postgresqlPort: number;
    apiPort: number;
} & {
    readonly __type: any;
}, of: (input: unknown) => import("fluture").FutureInstance<import("./TaqError").TaqError, {
    disableAutostartWithSandbox: boolean;
    postgresqlPort: number;
    apiPort: number;
} & {
    readonly __type: any;
}>, make: (input: {
    disableAutostartWithSandbox: boolean;
    postgresqlPort: number;
    apiPort: number;
}) => import("fluture").FutureInstance<import("./TaqError").TaqError, {
    disableAutostartWithSandbox: boolean;
    postgresqlPort: number;
    apiPort: number;
} & {
    readonly __type: any;
}>;
export declare const schemas: {
    schema: z.ZodEffects<z.ZodEffects<z.ZodType<any, z.ZodTypeDef, any>, {
        disableAutostartWithSandbox: boolean;
        postgresqlPort: number;
        apiPort: number;
    } & {
        readonly __type: any;
    }, any>, {
        disableAutostartWithSandbox: boolean;
        postgresqlPort: number;
        apiPort: number;
    } & {
        readonly __type: any;
    }, any>;
    rawSchema: z.ZodType<any, z.ZodTypeDef, any>;
    internalSchema: z.ZodType<any, z.ZodTypeDef, any>;
};
//# sourceMappingURL=tzkt-config.d.ts.map