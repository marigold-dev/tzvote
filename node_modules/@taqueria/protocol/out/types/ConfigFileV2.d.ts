import { TaqError } from '@taqueria/protocol/TaqError';
import { FutureInstance } from 'fluture';
import { ConfigFileV2 } from '@taqueria/protocol/types';
import { ConfigFileV2 as ConfigFileV2Strict } from '@taqueria/protocol/out/types-strict';
export type { ConfigFileV2Strict as ConfigFileV2 };
export declare const from: (input: unknown) => ConfigFileV2Strict;
export declare const create: (input: ConfigFileV2) => ConfigFileV2Strict;
export declare const of: (input: unknown) => FutureInstance<TaqError, ConfigFileV2Strict>;
export declare const make: (input: Omit<ConfigFileV2Strict, '__type'>) => FutureInstance<TaqError, ConfigFileV2Strict>;
export declare const schemas: {
    rawSchema: import("zod").ZodObject<{
        version: import("zod").ZodString;
        language: import("zod").ZodOptional<import("zod").ZodDefault<import("zod").ZodUnion<[import("zod").ZodLiteral<"en">, import("zod").ZodLiteral<"fr">]>>>;
        metadata: import("zod").ZodOptional<import("zod").ZodObject<{
            name: import("zod").ZodOptional<import("zod").ZodString>;
            projectDescription: import("zod").ZodOptional<import("zod").ZodString>;
            authors: import("zod").ZodOptional<import("zod").ZodArray<import("zod").ZodString, "many">>;
            license: import("zod").ZodOptional<import("zod").ZodString>;
            homepage: import("zod").ZodOptional<import("zod").ZodString>;
        }, "strip", import("zod").ZodTypeAny, {
            name?: string | undefined;
            projectDescription?: string | undefined;
            authors?: string[] | undefined;
            license?: string | undefined;
            homepage?: string | undefined;
        }, {
            name?: string | undefined;
            projectDescription?: string | undefined;
            authors?: string[] | undefined;
            license?: string | undefined;
            homepage?: string | undefined;
        }>>;
        artifactsDir: import("zod").ZodOptional<import("zod").ZodDefault<import("zod").ZodString>>;
        contractsDir: import("zod").ZodOptional<import("zod").ZodDefault<import("zod").ZodString>>;
        accounts: import("zod").ZodOptional<import("zod").ZodRecord<import("zod").ZodString, import("zod").ZodObject<{
            balance: import("zod").ZodObject<{
                amount: import("zod").ZodString;
                units: import("zod").ZodString;
            }, "strip", import("zod").ZodTypeAny, {
                amount: string;
                units: string;
            }, {
                amount: string;
                units: string;
            }>;
        }, "strip", import("zod").ZodTypeAny, {
            balance: {
                amount: string;
                units: string;
            };
        }, {
            balance: {
                amount: string;
                units: string;
            };
        }>>>;
        contracts: import("zod").ZodOptional<import("zod").ZodRecord<import("zod").ZodString, import("zod").ZodObject<{
            sourceFile: import("zod").ZodString;
            hash: import("zod").ZodString;
        }, "strip", import("zod").ZodTypeAny, {
            sourceFile: string;
            hash: string;
        }, {
            sourceFile: string;
            hash: string;
        }>>>;
        environmentDefault: import("zod").ZodOptional<import("zod").ZodString>;
        environments: import("zod").ZodOptional<import("zod").ZodRecord<import("zod").ZodString, import("zod").ZodObject<{
            type: import("zod").ZodOptional<import("zod").ZodString>;
            accounts: import("zod").ZodOptional<import("zod").ZodRecord<import("zod").ZodString, import("zod").ZodObject<{
                type: import("zod").ZodOptional<import("zod").ZodString>;
            }, "passthrough", import("zod").ZodTypeAny, import("zod").objectOutputType<{
                type: import("zod").ZodOptional<import("zod").ZodString>;
            }, import("zod").ZodTypeAny, "passthrough">, import("zod").objectInputType<{
                type: import("zod").ZodOptional<import("zod").ZodString>;
            }, import("zod").ZodTypeAny, "passthrough">>>>;
            accountDefault: import("zod").ZodOptional<import("zod").ZodAny>;
            contracts: import("zod").ZodOptional<import("zod").ZodRecord<import("zod").ZodString, import("zod").ZodObject<{
                address: import("zod").ZodOptional<import("zod").ZodString>;
            }, "strip", import("zod").ZodTypeAny, {
                address?: string | undefined;
            }, {
                address?: string | undefined;
            }>>>;
        }, "passthrough", import("zod").ZodTypeAny, import("zod").objectOutputType<{
            type: import("zod").ZodOptional<import("zod").ZodString>;
            accounts: import("zod").ZodOptional<import("zod").ZodRecord<import("zod").ZodString, import("zod").ZodObject<{
                type: import("zod").ZodOptional<import("zod").ZodString>;
            }, "passthrough", import("zod").ZodTypeAny, import("zod").objectOutputType<{
                type: import("zod").ZodOptional<import("zod").ZodString>;
            }, import("zod").ZodTypeAny, "passthrough">, import("zod").objectInputType<{
                type: import("zod").ZodOptional<import("zod").ZodString>;
            }, import("zod").ZodTypeAny, "passthrough">>>>;
            accountDefault: import("zod").ZodOptional<import("zod").ZodAny>;
            contracts: import("zod").ZodOptional<import("zod").ZodRecord<import("zod").ZodString, import("zod").ZodObject<{
                address: import("zod").ZodOptional<import("zod").ZodString>;
            }, "strip", import("zod").ZodTypeAny, {
                address?: string | undefined;
            }, {
                address?: string | undefined;
            }>>>;
        }, import("zod").ZodTypeAny, "passthrough">, import("zod").objectInputType<{
            type: import("zod").ZodOptional<import("zod").ZodString>;
            accounts: import("zod").ZodOptional<import("zod").ZodRecord<import("zod").ZodString, import("zod").ZodObject<{
                type: import("zod").ZodOptional<import("zod").ZodString>;
            }, "passthrough", import("zod").ZodTypeAny, import("zod").objectOutputType<{
                type: import("zod").ZodOptional<import("zod").ZodString>;
            }, import("zod").ZodTypeAny, "passthrough">, import("zod").objectInputType<{
                type: import("zod").ZodOptional<import("zod").ZodString>;
            }, import("zod").ZodTypeAny, "passthrough">>>>;
            accountDefault: import("zod").ZodOptional<import("zod").ZodAny>;
            contracts: import("zod").ZodOptional<import("zod").ZodRecord<import("zod").ZodString, import("zod").ZodObject<{
                address: import("zod").ZodOptional<import("zod").ZodString>;
            }, "strip", import("zod").ZodTypeAny, {
                address?: string | undefined;
            }, {
                address?: string | undefined;
            }>>>;
        }, import("zod").ZodTypeAny, "passthrough">>>>;
        plugins: import("zod").ZodOptional<import("zod").ZodArray<import("zod").ZodObject<{
            type: import("zod").ZodUnion<[import("zod").ZodLiteral<"npm">, import("zod").ZodLiteral<"binary">, import("zod").ZodLiteral<"deno">]>;
            name: import("zod").ZodString;
        }, "strip", import("zod").ZodTypeAny, {
            type: "npm" | "binary" | "deno";
            name: string;
        }, {
            type: "npm" | "binary" | "deno";
            name: string;
        }>, "many">>;
    }, "strip", import("zod").ZodTypeAny, {
        version: string;
        language?: "en" | "fr" | undefined;
        metadata?: {
            name?: string | undefined;
            projectDescription?: string | undefined;
            authors?: string[] | undefined;
            license?: string | undefined;
            homepage?: string | undefined;
        } | undefined;
        artifactsDir?: string | undefined;
        contractsDir?: string | undefined;
        accounts?: Record<string, {
            balance: {
                amount: string;
                units: string;
            };
        }> | undefined;
        contracts?: Record<string, {
            sourceFile: string;
            hash: string;
        }> | undefined;
        environmentDefault?: string | undefined;
        environments?: Record<string, import("zod").objectOutputType<{
            type: import("zod").ZodOptional<import("zod").ZodString>;
            accounts: import("zod").ZodOptional<import("zod").ZodRecord<import("zod").ZodString, import("zod").ZodObject<{
                type: import("zod").ZodOptional<import("zod").ZodString>;
            }, "passthrough", import("zod").ZodTypeAny, import("zod").objectOutputType<{
                type: import("zod").ZodOptional<import("zod").ZodString>;
            }, import("zod").ZodTypeAny, "passthrough">, import("zod").objectInputType<{
                type: import("zod").ZodOptional<import("zod").ZodString>;
            }, import("zod").ZodTypeAny, "passthrough">>>>;
            accountDefault: import("zod").ZodOptional<import("zod").ZodAny>;
            contracts: import("zod").ZodOptional<import("zod").ZodRecord<import("zod").ZodString, import("zod").ZodObject<{
                address: import("zod").ZodOptional<import("zod").ZodString>;
            }, "strip", import("zod").ZodTypeAny, {
                address?: string | undefined;
            }, {
                address?: string | undefined;
            }>>>;
        }, import("zod").ZodTypeAny, "passthrough">> | undefined;
        plugins?: {
            type: "npm" | "binary" | "deno";
            name: string;
        }[] | undefined;
    }, {
        version: string;
        language?: "en" | "fr" | undefined;
        metadata?: {
            name?: string | undefined;
            projectDescription?: string | undefined;
            authors?: string[] | undefined;
            license?: string | undefined;
            homepage?: string | undefined;
        } | undefined;
        artifactsDir?: string | undefined;
        contractsDir?: string | undefined;
        accounts?: Record<string, {
            balance: {
                amount: string;
                units: string;
            };
        }> | undefined;
        contracts?: Record<string, {
            sourceFile: string;
            hash: string;
        }> | undefined;
        environmentDefault?: string | undefined;
        environments?: Record<string, import("zod").objectInputType<{
            type: import("zod").ZodOptional<import("zod").ZodString>;
            accounts: import("zod").ZodOptional<import("zod").ZodRecord<import("zod").ZodString, import("zod").ZodObject<{
                type: import("zod").ZodOptional<import("zod").ZodString>;
            }, "passthrough", import("zod").ZodTypeAny, import("zod").objectOutputType<{
                type: import("zod").ZodOptional<import("zod").ZodString>;
            }, import("zod").ZodTypeAny, "passthrough">, import("zod").objectInputType<{
                type: import("zod").ZodOptional<import("zod").ZodString>;
            }, import("zod").ZodTypeAny, "passthrough">>>>;
            accountDefault: import("zod").ZodOptional<import("zod").ZodAny>;
            contracts: import("zod").ZodOptional<import("zod").ZodRecord<import("zod").ZodString, import("zod").ZodObject<{
                address: import("zod").ZodOptional<import("zod").ZodString>;
            }, "strip", import("zod").ZodTypeAny, {
                address?: string | undefined;
            }, {
                address?: string | undefined;
            }>>>;
        }, import("zod").ZodTypeAny, "passthrough">> | undefined;
        plugins?: {
            type: "npm" | "binary" | "deno";
            name: string;
        }[] | undefined;
    }>;
    schema: import("zod").ZodEffects<import("zod").ZodObject<{
        version: import("zod").ZodString;
        language: import("zod").ZodOptional<import("zod").ZodDefault<import("zod").ZodUnion<[import("zod").ZodLiteral<"en">, import("zod").ZodLiteral<"fr">]>>>;
        metadata: import("zod").ZodOptional<import("zod").ZodObject<{
            name: import("zod").ZodOptional<import("zod").ZodString>;
            projectDescription: import("zod").ZodOptional<import("zod").ZodString>;
            authors: import("zod").ZodOptional<import("zod").ZodArray<import("zod").ZodString, "many">>;
            license: import("zod").ZodOptional<import("zod").ZodString>;
            homepage: import("zod").ZodOptional<import("zod").ZodString>;
        }, "strip", import("zod").ZodTypeAny, {
            name?: string | undefined;
            projectDescription?: string | undefined;
            authors?: string[] | undefined;
            license?: string | undefined;
            homepage?: string | undefined;
        }, {
            name?: string | undefined;
            projectDescription?: string | undefined;
            authors?: string[] | undefined;
            license?: string | undefined;
            homepage?: string | undefined;
        }>>;
        artifactsDir: import("zod").ZodOptional<import("zod").ZodDefault<import("zod").ZodString>>;
        contractsDir: import("zod").ZodOptional<import("zod").ZodDefault<import("zod").ZodString>>;
        accounts: import("zod").ZodOptional<import("zod").ZodRecord<import("zod").ZodString, import("zod").ZodObject<{
            balance: import("zod").ZodObject<{
                amount: import("zod").ZodString;
                units: import("zod").ZodString;
            }, "strip", import("zod").ZodTypeAny, {
                amount: string;
                units: string;
            }, {
                amount: string;
                units: string;
            }>;
        }, "strip", import("zod").ZodTypeAny, {
            balance: {
                amount: string;
                units: string;
            };
        }, {
            balance: {
                amount: string;
                units: string;
            };
        }>>>;
        contracts: import("zod").ZodOptional<import("zod").ZodRecord<import("zod").ZodString, import("zod").ZodObject<{
            sourceFile: import("zod").ZodString;
            hash: import("zod").ZodString;
        }, "strip", import("zod").ZodTypeAny, {
            sourceFile: string;
            hash: string;
        }, {
            sourceFile: string;
            hash: string;
        }>>>;
        environmentDefault: import("zod").ZodOptional<import("zod").ZodString>;
        environments: import("zod").ZodOptional<import("zod").ZodRecord<import("zod").ZodString, import("zod").ZodObject<{
            type: import("zod").ZodOptional<import("zod").ZodString>;
            accounts: import("zod").ZodOptional<import("zod").ZodRecord<import("zod").ZodString, import("zod").ZodObject<{
                type: import("zod").ZodOptional<import("zod").ZodString>;
            }, "passthrough", import("zod").ZodTypeAny, import("zod").objectOutputType<{
                type: import("zod").ZodOptional<import("zod").ZodString>;
            }, import("zod").ZodTypeAny, "passthrough">, import("zod").objectInputType<{
                type: import("zod").ZodOptional<import("zod").ZodString>;
            }, import("zod").ZodTypeAny, "passthrough">>>>;
            accountDefault: import("zod").ZodOptional<import("zod").ZodAny>;
            contracts: import("zod").ZodOptional<import("zod").ZodRecord<import("zod").ZodString, import("zod").ZodObject<{
                address: import("zod").ZodOptional<import("zod").ZodString>;
            }, "strip", import("zod").ZodTypeAny, {
                address?: string | undefined;
            }, {
                address?: string | undefined;
            }>>>;
        }, "passthrough", import("zod").ZodTypeAny, import("zod").objectOutputType<{
            type: import("zod").ZodOptional<import("zod").ZodString>;
            accounts: import("zod").ZodOptional<import("zod").ZodRecord<import("zod").ZodString, import("zod").ZodObject<{
                type: import("zod").ZodOptional<import("zod").ZodString>;
            }, "passthrough", import("zod").ZodTypeAny, import("zod").objectOutputType<{
                type: import("zod").ZodOptional<import("zod").ZodString>;
            }, import("zod").ZodTypeAny, "passthrough">, import("zod").objectInputType<{
                type: import("zod").ZodOptional<import("zod").ZodString>;
            }, import("zod").ZodTypeAny, "passthrough">>>>;
            accountDefault: import("zod").ZodOptional<import("zod").ZodAny>;
            contracts: import("zod").ZodOptional<import("zod").ZodRecord<import("zod").ZodString, import("zod").ZodObject<{
                address: import("zod").ZodOptional<import("zod").ZodString>;
            }, "strip", import("zod").ZodTypeAny, {
                address?: string | undefined;
            }, {
                address?: string | undefined;
            }>>>;
        }, import("zod").ZodTypeAny, "passthrough">, import("zod").objectInputType<{
            type: import("zod").ZodOptional<import("zod").ZodString>;
            accounts: import("zod").ZodOptional<import("zod").ZodRecord<import("zod").ZodString, import("zod").ZodObject<{
                type: import("zod").ZodOptional<import("zod").ZodString>;
            }, "passthrough", import("zod").ZodTypeAny, import("zod").objectOutputType<{
                type: import("zod").ZodOptional<import("zod").ZodString>;
            }, import("zod").ZodTypeAny, "passthrough">, import("zod").objectInputType<{
                type: import("zod").ZodOptional<import("zod").ZodString>;
            }, import("zod").ZodTypeAny, "passthrough">>>>;
            accountDefault: import("zod").ZodOptional<import("zod").ZodAny>;
            contracts: import("zod").ZodOptional<import("zod").ZodRecord<import("zod").ZodString, import("zod").ZodObject<{
                address: import("zod").ZodOptional<import("zod").ZodString>;
            }, "strip", import("zod").ZodTypeAny, {
                address?: string | undefined;
            }, {
                address?: string | undefined;
            }>>>;
        }, import("zod").ZodTypeAny, "passthrough">>>>;
        plugins: import("zod").ZodOptional<import("zod").ZodArray<import("zod").ZodObject<{
            type: import("zod").ZodUnion<[import("zod").ZodLiteral<"npm">, import("zod").ZodLiteral<"binary">, import("zod").ZodLiteral<"deno">]>;
            name: import("zod").ZodString;
        }, "strip", import("zod").ZodTypeAny, {
            type: "npm" | "binary" | "deno";
            name: string;
        }, {
            type: "npm" | "binary" | "deno";
            name: string;
        }>, "many">>;
    }, "strip", import("zod").ZodTypeAny, {
        version: string;
        language?: "en" | "fr" | undefined;
        metadata?: {
            name?: string | undefined;
            projectDescription?: string | undefined;
            authors?: string[] | undefined;
            license?: string | undefined;
            homepage?: string | undefined;
        } | undefined;
        artifactsDir?: string | undefined;
        contractsDir?: string | undefined;
        accounts?: Record<string, {
            balance: {
                amount: string;
                units: string;
            };
        }> | undefined;
        contracts?: Record<string, {
            sourceFile: string;
            hash: string;
        }> | undefined;
        environmentDefault?: string | undefined;
        environments?: Record<string, import("zod").objectOutputType<{
            type: import("zod").ZodOptional<import("zod").ZodString>;
            accounts: import("zod").ZodOptional<import("zod").ZodRecord<import("zod").ZodString, import("zod").ZodObject<{
                type: import("zod").ZodOptional<import("zod").ZodString>;
            }, "passthrough", import("zod").ZodTypeAny, import("zod").objectOutputType<{
                type: import("zod").ZodOptional<import("zod").ZodString>;
            }, import("zod").ZodTypeAny, "passthrough">, import("zod").objectInputType<{
                type: import("zod").ZodOptional<import("zod").ZodString>;
            }, import("zod").ZodTypeAny, "passthrough">>>>;
            accountDefault: import("zod").ZodOptional<import("zod").ZodAny>;
            contracts: import("zod").ZodOptional<import("zod").ZodRecord<import("zod").ZodString, import("zod").ZodObject<{
                address: import("zod").ZodOptional<import("zod").ZodString>;
            }, "strip", import("zod").ZodTypeAny, {
                address?: string | undefined;
            }, {
                address?: string | undefined;
            }>>>;
        }, import("zod").ZodTypeAny, "passthrough">> | undefined;
        plugins?: {
            type: "npm" | "binary" | "deno";
            name: string;
        }[] | undefined;
    }, {
        version: string;
        language?: "en" | "fr" | undefined;
        metadata?: {
            name?: string | undefined;
            projectDescription?: string | undefined;
            authors?: string[] | undefined;
            license?: string | undefined;
            homepage?: string | undefined;
        } | undefined;
        artifactsDir?: string | undefined;
        contractsDir?: string | undefined;
        accounts?: Record<string, {
            balance: {
                amount: string;
                units: string;
            };
        }> | undefined;
        contracts?: Record<string, {
            sourceFile: string;
            hash: string;
        }> | undefined;
        environmentDefault?: string | undefined;
        environments?: Record<string, import("zod").objectInputType<{
            type: import("zod").ZodOptional<import("zod").ZodString>;
            accounts: import("zod").ZodOptional<import("zod").ZodRecord<import("zod").ZodString, import("zod").ZodObject<{
                type: import("zod").ZodOptional<import("zod").ZodString>;
            }, "passthrough", import("zod").ZodTypeAny, import("zod").objectOutputType<{
                type: import("zod").ZodOptional<import("zod").ZodString>;
            }, import("zod").ZodTypeAny, "passthrough">, import("zod").objectInputType<{
                type: import("zod").ZodOptional<import("zod").ZodString>;
            }, import("zod").ZodTypeAny, "passthrough">>>>;
            accountDefault: import("zod").ZodOptional<import("zod").ZodAny>;
            contracts: import("zod").ZodOptional<import("zod").ZodRecord<import("zod").ZodString, import("zod").ZodObject<{
                address: import("zod").ZodOptional<import("zod").ZodString>;
            }, "strip", import("zod").ZodTypeAny, {
                address?: string | undefined;
            }, {
                address?: string | undefined;
            }>>>;
        }, import("zod").ZodTypeAny, "passthrough">> | undefined;
        plugins?: {
            type: "npm" | "binary" | "deno";
            name: string;
        }[] | undefined;
    }>, ConfigFileV2Strict, {
        version: string;
        language?: "en" | "fr" | undefined;
        metadata?: {
            name?: string | undefined;
            projectDescription?: string | undefined;
            authors?: string[] | undefined;
            license?: string | undefined;
            homepage?: string | undefined;
        } | undefined;
        artifactsDir?: string | undefined;
        contractsDir?: string | undefined;
        accounts?: Record<string, {
            balance: {
                amount: string;
                units: string;
            };
        }> | undefined;
        contracts?: Record<string, {
            sourceFile: string;
            hash: string;
        }> | undefined;
        environmentDefault?: string | undefined;
        environments?: Record<string, import("zod").objectInputType<{
            type: import("zod").ZodOptional<import("zod").ZodString>;
            accounts: import("zod").ZodOptional<import("zod").ZodRecord<import("zod").ZodString, import("zod").ZodObject<{
                type: import("zod").ZodOptional<import("zod").ZodString>;
            }, "passthrough", import("zod").ZodTypeAny, import("zod").objectOutputType<{
                type: import("zod").ZodOptional<import("zod").ZodString>;
            }, import("zod").ZodTypeAny, "passthrough">, import("zod").objectInputType<{
                type: import("zod").ZodOptional<import("zod").ZodString>;
            }, import("zod").ZodTypeAny, "passthrough">>>>;
            accountDefault: import("zod").ZodOptional<import("zod").ZodAny>;
            contracts: import("zod").ZodOptional<import("zod").ZodRecord<import("zod").ZodString, import("zod").ZodObject<{
                address: import("zod").ZodOptional<import("zod").ZodString>;
            }, "strip", import("zod").ZodTypeAny, {
                address?: string | undefined;
            }, {
                address?: string | undefined;
            }>>>;
        }, import("zod").ZodTypeAny, "passthrough">> | undefined;
        plugins?: {
            type: "npm" | "binary" | "deno";
            name: string;
        }[] | undefined;
    }>;
};
export declare const rawSchema: import("zod").ZodObject<{
    version: import("zod").ZodString;
    language: import("zod").ZodOptional<import("zod").ZodDefault<import("zod").ZodUnion<[import("zod").ZodLiteral<"en">, import("zod").ZodLiteral<"fr">]>>>;
    metadata: import("zod").ZodOptional<import("zod").ZodObject<{
        name: import("zod").ZodOptional<import("zod").ZodString>;
        projectDescription: import("zod").ZodOptional<import("zod").ZodString>;
        authors: import("zod").ZodOptional<import("zod").ZodArray<import("zod").ZodString, "many">>;
        license: import("zod").ZodOptional<import("zod").ZodString>;
        homepage: import("zod").ZodOptional<import("zod").ZodString>;
    }, "strip", import("zod").ZodTypeAny, {
        name?: string | undefined;
        projectDescription?: string | undefined;
        authors?: string[] | undefined;
        license?: string | undefined;
        homepage?: string | undefined;
    }, {
        name?: string | undefined;
        projectDescription?: string | undefined;
        authors?: string[] | undefined;
        license?: string | undefined;
        homepage?: string | undefined;
    }>>;
    artifactsDir: import("zod").ZodOptional<import("zod").ZodDefault<import("zod").ZodString>>;
    contractsDir: import("zod").ZodOptional<import("zod").ZodDefault<import("zod").ZodString>>;
    accounts: import("zod").ZodOptional<import("zod").ZodRecord<import("zod").ZodString, import("zod").ZodObject<{
        balance: import("zod").ZodObject<{
            amount: import("zod").ZodString;
            units: import("zod").ZodString;
        }, "strip", import("zod").ZodTypeAny, {
            amount: string;
            units: string;
        }, {
            amount: string;
            units: string;
        }>;
    }, "strip", import("zod").ZodTypeAny, {
        balance: {
            amount: string;
            units: string;
        };
    }, {
        balance: {
            amount: string;
            units: string;
        };
    }>>>;
    contracts: import("zod").ZodOptional<import("zod").ZodRecord<import("zod").ZodString, import("zod").ZodObject<{
        sourceFile: import("zod").ZodString;
        hash: import("zod").ZodString;
    }, "strip", import("zod").ZodTypeAny, {
        sourceFile: string;
        hash: string;
    }, {
        sourceFile: string;
        hash: string;
    }>>>;
    environmentDefault: import("zod").ZodOptional<import("zod").ZodString>;
    environments: import("zod").ZodOptional<import("zod").ZodRecord<import("zod").ZodString, import("zod").ZodObject<{
        type: import("zod").ZodOptional<import("zod").ZodString>;
        accounts: import("zod").ZodOptional<import("zod").ZodRecord<import("zod").ZodString, import("zod").ZodObject<{
            type: import("zod").ZodOptional<import("zod").ZodString>;
        }, "passthrough", import("zod").ZodTypeAny, import("zod").objectOutputType<{
            type: import("zod").ZodOptional<import("zod").ZodString>;
        }, import("zod").ZodTypeAny, "passthrough">, import("zod").objectInputType<{
            type: import("zod").ZodOptional<import("zod").ZodString>;
        }, import("zod").ZodTypeAny, "passthrough">>>>;
        accountDefault: import("zod").ZodOptional<import("zod").ZodAny>;
        contracts: import("zod").ZodOptional<import("zod").ZodRecord<import("zod").ZodString, import("zod").ZodObject<{
            address: import("zod").ZodOptional<import("zod").ZodString>;
        }, "strip", import("zod").ZodTypeAny, {
            address?: string | undefined;
        }, {
            address?: string | undefined;
        }>>>;
    }, "passthrough", import("zod").ZodTypeAny, import("zod").objectOutputType<{
        type: import("zod").ZodOptional<import("zod").ZodString>;
        accounts: import("zod").ZodOptional<import("zod").ZodRecord<import("zod").ZodString, import("zod").ZodObject<{
            type: import("zod").ZodOptional<import("zod").ZodString>;
        }, "passthrough", import("zod").ZodTypeAny, import("zod").objectOutputType<{
            type: import("zod").ZodOptional<import("zod").ZodString>;
        }, import("zod").ZodTypeAny, "passthrough">, import("zod").objectInputType<{
            type: import("zod").ZodOptional<import("zod").ZodString>;
        }, import("zod").ZodTypeAny, "passthrough">>>>;
        accountDefault: import("zod").ZodOptional<import("zod").ZodAny>;
        contracts: import("zod").ZodOptional<import("zod").ZodRecord<import("zod").ZodString, import("zod").ZodObject<{
            address: import("zod").ZodOptional<import("zod").ZodString>;
        }, "strip", import("zod").ZodTypeAny, {
            address?: string | undefined;
        }, {
            address?: string | undefined;
        }>>>;
    }, import("zod").ZodTypeAny, "passthrough">, import("zod").objectInputType<{
        type: import("zod").ZodOptional<import("zod").ZodString>;
        accounts: import("zod").ZodOptional<import("zod").ZodRecord<import("zod").ZodString, import("zod").ZodObject<{
            type: import("zod").ZodOptional<import("zod").ZodString>;
        }, "passthrough", import("zod").ZodTypeAny, import("zod").objectOutputType<{
            type: import("zod").ZodOptional<import("zod").ZodString>;
        }, import("zod").ZodTypeAny, "passthrough">, import("zod").objectInputType<{
            type: import("zod").ZodOptional<import("zod").ZodString>;
        }, import("zod").ZodTypeAny, "passthrough">>>>;
        accountDefault: import("zod").ZodOptional<import("zod").ZodAny>;
        contracts: import("zod").ZodOptional<import("zod").ZodRecord<import("zod").ZodString, import("zod").ZodObject<{
            address: import("zod").ZodOptional<import("zod").ZodString>;
        }, "strip", import("zod").ZodTypeAny, {
            address?: string | undefined;
        }, {
            address?: string | undefined;
        }>>>;
    }, import("zod").ZodTypeAny, "passthrough">>>>;
    plugins: import("zod").ZodOptional<import("zod").ZodArray<import("zod").ZodObject<{
        type: import("zod").ZodUnion<[import("zod").ZodLiteral<"npm">, import("zod").ZodLiteral<"binary">, import("zod").ZodLiteral<"deno">]>;
        name: import("zod").ZodString;
    }, "strip", import("zod").ZodTypeAny, {
        type: "npm" | "binary" | "deno";
        name: string;
    }, {
        type: "npm" | "binary" | "deno";
        name: string;
    }>, "many">>;
}, "strip", import("zod").ZodTypeAny, {
    version: string;
    language?: "en" | "fr" | undefined;
    metadata?: {
        name?: string | undefined;
        projectDescription?: string | undefined;
        authors?: string[] | undefined;
        license?: string | undefined;
        homepage?: string | undefined;
    } | undefined;
    artifactsDir?: string | undefined;
    contractsDir?: string | undefined;
    accounts?: Record<string, {
        balance: {
            amount: string;
            units: string;
        };
    }> | undefined;
    contracts?: Record<string, {
        sourceFile: string;
        hash: string;
    }> | undefined;
    environmentDefault?: string | undefined;
    environments?: Record<string, import("zod").objectOutputType<{
        type: import("zod").ZodOptional<import("zod").ZodString>;
        accounts: import("zod").ZodOptional<import("zod").ZodRecord<import("zod").ZodString, import("zod").ZodObject<{
            type: import("zod").ZodOptional<import("zod").ZodString>;
        }, "passthrough", import("zod").ZodTypeAny, import("zod").objectOutputType<{
            type: import("zod").ZodOptional<import("zod").ZodString>;
        }, import("zod").ZodTypeAny, "passthrough">, import("zod").objectInputType<{
            type: import("zod").ZodOptional<import("zod").ZodString>;
        }, import("zod").ZodTypeAny, "passthrough">>>>;
        accountDefault: import("zod").ZodOptional<import("zod").ZodAny>;
        contracts: import("zod").ZodOptional<import("zod").ZodRecord<import("zod").ZodString, import("zod").ZodObject<{
            address: import("zod").ZodOptional<import("zod").ZodString>;
        }, "strip", import("zod").ZodTypeAny, {
            address?: string | undefined;
        }, {
            address?: string | undefined;
        }>>>;
    }, import("zod").ZodTypeAny, "passthrough">> | undefined;
    plugins?: {
        type: "npm" | "binary" | "deno";
        name: string;
    }[] | undefined;
}, {
    version: string;
    language?: "en" | "fr" | undefined;
    metadata?: {
        name?: string | undefined;
        projectDescription?: string | undefined;
        authors?: string[] | undefined;
        license?: string | undefined;
        homepage?: string | undefined;
    } | undefined;
    artifactsDir?: string | undefined;
    contractsDir?: string | undefined;
    accounts?: Record<string, {
        balance: {
            amount: string;
            units: string;
        };
    }> | undefined;
    contracts?: Record<string, {
        sourceFile: string;
        hash: string;
    }> | undefined;
    environmentDefault?: string | undefined;
    environments?: Record<string, import("zod").objectInputType<{
        type: import("zod").ZodOptional<import("zod").ZodString>;
        accounts: import("zod").ZodOptional<import("zod").ZodRecord<import("zod").ZodString, import("zod").ZodObject<{
            type: import("zod").ZodOptional<import("zod").ZodString>;
        }, "passthrough", import("zod").ZodTypeAny, import("zod").objectOutputType<{
            type: import("zod").ZodOptional<import("zod").ZodString>;
        }, import("zod").ZodTypeAny, "passthrough">, import("zod").objectInputType<{
            type: import("zod").ZodOptional<import("zod").ZodString>;
        }, import("zod").ZodTypeAny, "passthrough">>>>;
        accountDefault: import("zod").ZodOptional<import("zod").ZodAny>;
        contracts: import("zod").ZodOptional<import("zod").ZodRecord<import("zod").ZodString, import("zod").ZodObject<{
            address: import("zod").ZodOptional<import("zod").ZodString>;
        }, "strip", import("zod").ZodTypeAny, {
            address?: string | undefined;
        }, {
            address?: string | undefined;
        }>>>;
    }, import("zod").ZodTypeAny, "passthrough">> | undefined;
    plugins?: {
        type: "npm" | "binary" | "deno";
        name: string;
    }[] | undefined;
}>;
export declare const internalSchema: import("zod").ZodObject<{
    version: import("zod").ZodString;
    language: import("zod").ZodOptional<import("zod").ZodDefault<import("zod").ZodUnion<[import("zod").ZodLiteral<"en">, import("zod").ZodLiteral<"fr">]>>>;
    metadata: import("zod").ZodOptional<import("zod").ZodObject<{
        name: import("zod").ZodOptional<import("zod").ZodString>;
        projectDescription: import("zod").ZodOptional<import("zod").ZodString>;
        authors: import("zod").ZodOptional<import("zod").ZodArray<import("zod").ZodString, "many">>;
        license: import("zod").ZodOptional<import("zod").ZodString>;
        homepage: import("zod").ZodOptional<import("zod").ZodString>;
    }, "strip", import("zod").ZodTypeAny, {
        name?: string | undefined;
        projectDescription?: string | undefined;
        authors?: string[] | undefined;
        license?: string | undefined;
        homepage?: string | undefined;
    }, {
        name?: string | undefined;
        projectDescription?: string | undefined;
        authors?: string[] | undefined;
        license?: string | undefined;
        homepage?: string | undefined;
    }>>;
    artifactsDir: import("zod").ZodOptional<import("zod").ZodDefault<import("zod").ZodString>>;
    contractsDir: import("zod").ZodOptional<import("zod").ZodDefault<import("zod").ZodString>>;
    accounts: import("zod").ZodOptional<import("zod").ZodRecord<import("zod").ZodString, import("zod").ZodObject<{
        balance: import("zod").ZodObject<{
            amount: import("zod").ZodString;
            units: import("zod").ZodString;
        }, "strip", import("zod").ZodTypeAny, {
            amount: string;
            units: string;
        }, {
            amount: string;
            units: string;
        }>;
    }, "strip", import("zod").ZodTypeAny, {
        balance: {
            amount: string;
            units: string;
        };
    }, {
        balance: {
            amount: string;
            units: string;
        };
    }>>>;
    contracts: import("zod").ZodOptional<import("zod").ZodRecord<import("zod").ZodString, import("zod").ZodObject<{
        sourceFile: import("zod").ZodString;
        hash: import("zod").ZodString;
    }, "strip", import("zod").ZodTypeAny, {
        sourceFile: string;
        hash: string;
    }, {
        sourceFile: string;
        hash: string;
    }>>>;
    environmentDefault: import("zod").ZodOptional<import("zod").ZodString>;
    environments: import("zod").ZodOptional<import("zod").ZodRecord<import("zod").ZodString, import("zod").ZodObject<{
        type: import("zod").ZodOptional<import("zod").ZodString>;
        accounts: import("zod").ZodOptional<import("zod").ZodRecord<import("zod").ZodString, import("zod").ZodObject<{
            type: import("zod").ZodOptional<import("zod").ZodString>;
        }, "passthrough", import("zod").ZodTypeAny, import("zod").objectOutputType<{
            type: import("zod").ZodOptional<import("zod").ZodString>;
        }, import("zod").ZodTypeAny, "passthrough">, import("zod").objectInputType<{
            type: import("zod").ZodOptional<import("zod").ZodString>;
        }, import("zod").ZodTypeAny, "passthrough">>>>;
        accountDefault: import("zod").ZodOptional<import("zod").ZodAny>;
        contracts: import("zod").ZodOptional<import("zod").ZodRecord<import("zod").ZodString, import("zod").ZodObject<{
            address: import("zod").ZodOptional<import("zod").ZodString>;
        }, "strip", import("zod").ZodTypeAny, {
            address?: string | undefined;
        }, {
            address?: string | undefined;
        }>>>;
    }, "passthrough", import("zod").ZodTypeAny, import("zod").objectOutputType<{
        type: import("zod").ZodOptional<import("zod").ZodString>;
        accounts: import("zod").ZodOptional<import("zod").ZodRecord<import("zod").ZodString, import("zod").ZodObject<{
            type: import("zod").ZodOptional<import("zod").ZodString>;
        }, "passthrough", import("zod").ZodTypeAny, import("zod").objectOutputType<{
            type: import("zod").ZodOptional<import("zod").ZodString>;
        }, import("zod").ZodTypeAny, "passthrough">, import("zod").objectInputType<{
            type: import("zod").ZodOptional<import("zod").ZodString>;
        }, import("zod").ZodTypeAny, "passthrough">>>>;
        accountDefault: import("zod").ZodOptional<import("zod").ZodAny>;
        contracts: import("zod").ZodOptional<import("zod").ZodRecord<import("zod").ZodString, import("zod").ZodObject<{
            address: import("zod").ZodOptional<import("zod").ZodString>;
        }, "strip", import("zod").ZodTypeAny, {
            address?: string | undefined;
        }, {
            address?: string | undefined;
        }>>>;
    }, import("zod").ZodTypeAny, "passthrough">, import("zod").objectInputType<{
        type: import("zod").ZodOptional<import("zod").ZodString>;
        accounts: import("zod").ZodOptional<import("zod").ZodRecord<import("zod").ZodString, import("zod").ZodObject<{
            type: import("zod").ZodOptional<import("zod").ZodString>;
        }, "passthrough", import("zod").ZodTypeAny, import("zod").objectOutputType<{
            type: import("zod").ZodOptional<import("zod").ZodString>;
        }, import("zod").ZodTypeAny, "passthrough">, import("zod").objectInputType<{
            type: import("zod").ZodOptional<import("zod").ZodString>;
        }, import("zod").ZodTypeAny, "passthrough">>>>;
        accountDefault: import("zod").ZodOptional<import("zod").ZodAny>;
        contracts: import("zod").ZodOptional<import("zod").ZodRecord<import("zod").ZodString, import("zod").ZodObject<{
            address: import("zod").ZodOptional<import("zod").ZodString>;
        }, "strip", import("zod").ZodTypeAny, {
            address?: string | undefined;
        }, {
            address?: string | undefined;
        }>>>;
    }, import("zod").ZodTypeAny, "passthrough">>>>;
    plugins: import("zod").ZodOptional<import("zod").ZodArray<import("zod").ZodObject<{
        type: import("zod").ZodUnion<[import("zod").ZodLiteral<"npm">, import("zod").ZodLiteral<"binary">, import("zod").ZodLiteral<"deno">]>;
        name: import("zod").ZodString;
    }, "strip", import("zod").ZodTypeAny, {
        type: "npm" | "binary" | "deno";
        name: string;
    }, {
        type: "npm" | "binary" | "deno";
        name: string;
    }>, "many">>;
}, "strip", import("zod").ZodTypeAny, {
    version: string;
    language?: "en" | "fr" | undefined;
    metadata?: {
        name?: string | undefined;
        projectDescription?: string | undefined;
        authors?: string[] | undefined;
        license?: string | undefined;
        homepage?: string | undefined;
    } | undefined;
    artifactsDir?: string | undefined;
    contractsDir?: string | undefined;
    accounts?: Record<string, {
        balance: {
            amount: string;
            units: string;
        };
    }> | undefined;
    contracts?: Record<string, {
        sourceFile: string;
        hash: string;
    }> | undefined;
    environmentDefault?: string | undefined;
    environments?: Record<string, import("zod").objectOutputType<{
        type: import("zod").ZodOptional<import("zod").ZodString>;
        accounts: import("zod").ZodOptional<import("zod").ZodRecord<import("zod").ZodString, import("zod").ZodObject<{
            type: import("zod").ZodOptional<import("zod").ZodString>;
        }, "passthrough", import("zod").ZodTypeAny, import("zod").objectOutputType<{
            type: import("zod").ZodOptional<import("zod").ZodString>;
        }, import("zod").ZodTypeAny, "passthrough">, import("zod").objectInputType<{
            type: import("zod").ZodOptional<import("zod").ZodString>;
        }, import("zod").ZodTypeAny, "passthrough">>>>;
        accountDefault: import("zod").ZodOptional<import("zod").ZodAny>;
        contracts: import("zod").ZodOptional<import("zod").ZodRecord<import("zod").ZodString, import("zod").ZodObject<{
            address: import("zod").ZodOptional<import("zod").ZodString>;
        }, "strip", import("zod").ZodTypeAny, {
            address?: string | undefined;
        }, {
            address?: string | undefined;
        }>>>;
    }, import("zod").ZodTypeAny, "passthrough">> | undefined;
    plugins?: {
        type: "npm" | "binary" | "deno";
        name: string;
    }[] | undefined;
}, {
    version: string;
    language?: "en" | "fr" | undefined;
    metadata?: {
        name?: string | undefined;
        projectDescription?: string | undefined;
        authors?: string[] | undefined;
        license?: string | undefined;
        homepage?: string | undefined;
    } | undefined;
    artifactsDir?: string | undefined;
    contractsDir?: string | undefined;
    accounts?: Record<string, {
        balance: {
            amount: string;
            units: string;
        };
    }> | undefined;
    contracts?: Record<string, {
        sourceFile: string;
        hash: string;
    }> | undefined;
    environmentDefault?: string | undefined;
    environments?: Record<string, import("zod").objectInputType<{
        type: import("zod").ZodOptional<import("zod").ZodString>;
        accounts: import("zod").ZodOptional<import("zod").ZodRecord<import("zod").ZodString, import("zod").ZodObject<{
            type: import("zod").ZodOptional<import("zod").ZodString>;
        }, "passthrough", import("zod").ZodTypeAny, import("zod").objectOutputType<{
            type: import("zod").ZodOptional<import("zod").ZodString>;
        }, import("zod").ZodTypeAny, "passthrough">, import("zod").objectInputType<{
            type: import("zod").ZodOptional<import("zod").ZodString>;
        }, import("zod").ZodTypeAny, "passthrough">>>>;
        accountDefault: import("zod").ZodOptional<import("zod").ZodAny>;
        contracts: import("zod").ZodOptional<import("zod").ZodRecord<import("zod").ZodString, import("zod").ZodObject<{
            address: import("zod").ZodOptional<import("zod").ZodString>;
        }, "strip", import("zod").ZodTypeAny, {
            address?: string | undefined;
        }, {
            address?: string | undefined;
        }>>>;
    }, import("zod").ZodTypeAny, "passthrough">> | undefined;
    plugins?: {
        type: "npm" | "binary" | "deno";
        name: string;
    }[] | undefined;
}>;
export type t = ConfigFileV2Strict;
//# sourceMappingURL=ConfigFileV2.d.ts.map