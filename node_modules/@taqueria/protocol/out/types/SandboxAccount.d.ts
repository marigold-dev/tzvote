import { TaqError } from '@taqueria/protocol/TaqError';
import { FutureInstance } from 'fluture';
import { SandboxAccount } from '@taqueria/protocol/types';
import { SandboxAccount as SandboxAccountStrict } from '@taqueria/protocol/out/types-strict';
export type { SandboxAccountStrict as SandboxAccount };
export declare const from: (input: unknown) => SandboxAccountStrict;
export declare const create: (input: SandboxAccount) => SandboxAccountStrict;
export declare const of: (input: unknown) => FutureInstance<TaqError, SandboxAccountStrict>;
export declare const make: (input: Omit<SandboxAccountStrict, '__type'>) => FutureInstance<TaqError, SandboxAccountStrict>;
export declare const schemas: {
    rawSchema: import("zod").ZodObject<{
        type: import("zod").ZodOptional<import("zod").ZodString>;
    }, "passthrough", import("zod").ZodTypeAny, import("zod").objectOutputType<{
        type: import("zod").ZodOptional<import("zod").ZodString>;
    }, import("zod").ZodTypeAny, "passthrough">, import("zod").objectInputType<{
        type: import("zod").ZodOptional<import("zod").ZodString>;
    }, import("zod").ZodTypeAny, "passthrough">>;
    schema: import("zod").ZodEffects<import("zod").ZodObject<{
        type: import("zod").ZodOptional<import("zod").ZodString>;
    }, "passthrough", import("zod").ZodTypeAny, import("zod").objectOutputType<{
        type: import("zod").ZodOptional<import("zod").ZodString>;
    }, import("zod").ZodTypeAny, "passthrough">, import("zod").objectInputType<{
        type: import("zod").ZodOptional<import("zod").ZodString>;
    }, import("zod").ZodTypeAny, "passthrough">>, SandboxAccountStrict, import("zod").objectInputType<{
        type: import("zod").ZodOptional<import("zod").ZodString>;
    }, import("zod").ZodTypeAny, "passthrough">>;
};
export declare const rawSchema: import("zod").ZodObject<{
    type: import("zod").ZodOptional<import("zod").ZodString>;
}, "passthrough", import("zod").ZodTypeAny, import("zod").objectOutputType<{
    type: import("zod").ZodOptional<import("zod").ZodString>;
}, import("zod").ZodTypeAny, "passthrough">, import("zod").objectInputType<{
    type: import("zod").ZodOptional<import("zod").ZodString>;
}, import("zod").ZodTypeAny, "passthrough">>;
export declare const internalSchema: import("zod").ZodObject<{
    type: import("zod").ZodOptional<import("zod").ZodString>;
}, "passthrough", import("zod").ZodTypeAny, import("zod").objectOutputType<{
    type: import("zod").ZodOptional<import("zod").ZodString>;
}, import("zod").ZodTypeAny, "passthrough">, import("zod").objectInputType<{
    type: import("zod").ZodOptional<import("zod").ZodString>;
}, import("zod").ZodTypeAny, "passthrough">>;
export type t = SandboxAccountStrict;
//# sourceMappingURL=SandboxAccount.d.ts.map