import { TaqError } from '@taqueria/protocol/TaqError';
import { FutureInstance } from 'fluture';
import { ConfigAccount } from '@taqueria/protocol/types';
import { ConfigAccount as ConfigAccountStrict } from '@taqueria/protocol/out/types-strict';
export type { ConfigAccountStrict as ConfigAccount };
export declare const from: (input: unknown) => ConfigAccountStrict;
export declare const create: (input: ConfigAccount) => ConfigAccountStrict;
export declare const of: (input: unknown) => FutureInstance<TaqError, ConfigAccountStrict>;
export declare const make: (input: Omit<ConfigAccountStrict, '__type'>) => FutureInstance<TaqError, ConfigAccountStrict>;
export declare const schemas: {
    rawSchema: import("zod").ZodObject<{
        balance: import("zod").ZodObject<{
            amount: import("zod").ZodString;
            units: import("zod").ZodString;
        }, "strip", import("zod").ZodTypeAny, {
            amount: string;
            units: string;
        }, {
            amount: string;
            units: string;
        }>;
    }, "strip", import("zod").ZodTypeAny, {
        balance: {
            amount: string;
            units: string;
        };
    }, {
        balance: {
            amount: string;
            units: string;
        };
    }>;
    schema: import("zod").ZodEffects<import("zod").ZodObject<{
        balance: import("zod").ZodObject<{
            amount: import("zod").ZodString;
            units: import("zod").ZodString;
        }, "strip", import("zod").ZodTypeAny, {
            amount: string;
            units: string;
        }, {
            amount: string;
            units: string;
        }>;
    }, "strip", import("zod").ZodTypeAny, {
        balance: {
            amount: string;
            units: string;
        };
    }, {
        balance: {
            amount: string;
            units: string;
        };
    }>, ConfigAccountStrict, {
        balance: {
            amount: string;
            units: string;
        };
    }>;
};
export declare const rawSchema: import("zod").ZodObject<{
    balance: import("zod").ZodObject<{
        amount: import("zod").ZodString;
        units: import("zod").ZodString;
    }, "strip", import("zod").ZodTypeAny, {
        amount: string;
        units: string;
    }, {
        amount: string;
        units: string;
    }>;
}, "strip", import("zod").ZodTypeAny, {
    balance: {
        amount: string;
        units: string;
    };
}, {
    balance: {
        amount: string;
        units: string;
    };
}>;
export declare const internalSchema: import("zod").ZodObject<{
    balance: import("zod").ZodObject<{
        amount: import("zod").ZodString;
        units: import("zod").ZodString;
    }, "strip", import("zod").ZodTypeAny, {
        amount: string;
        units: string;
    }, {
        amount: string;
        units: string;
    }>;
}, "strip", import("zod").ZodTypeAny, {
    balance: {
        amount: string;
        units: string;
    };
}, {
    balance: {
        amount: string;
        units: string;
    };
}>;
export type t = ConfigAccountStrict;
//# sourceMappingURL=ConfigAccount.d.ts.map